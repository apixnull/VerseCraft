@model VerseCraft.Models.Poem

@{
    ViewData["Title"] = "Poem Details";
}

<div class="poem-details-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Poem Details</h2>
        <div class="poem-actions">
            <a asp-action="EditPoem" asp-route-id="@Model.Id" class="btn btn-outline-primary me-2">
                <i class="bi bi-pencil"></i> Edit
            </a>
            <form asp-action="DeletePoem" asp-route-id="@Model.Id" method="post" class="d-inline delete-form me-2">
                <button type="submit" class="btn btn-outline-danger">
                    <i class="bi bi-trash"></i> Delete
                </button>
            </form>
            <a asp-action="DisplayPoems" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back
            </a>
        </div>
    </div>

    <div class="poem-card shadow-sm p-4 mb-5 bg-white rounded">
        <h2 class="poem-title text-center mb-3">@Model.Title</h2>

        @if (!string.IsNullOrEmpty(Model.CoverImagePath))
        {
            <div class="text-center mb-4">
                <img src="~/uploads/poems/@Model.CoverImagePath" alt="Cover Image" class="img-fluid rounded" style="max-height: 300px;" />
            </div>
        }
        else
        {
            <div class="text-center mb-4">
                <div class="no-image-placeholder rounded d-flex align-items-center justify-content-center">
                    <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                </div>
            </div>
        }

        <div class="poem-author text-center mb-3">
            By <span class="fw-bold">@Model.AuthorName</span>
        </div>

        <div class="tags mb-4 text-center">
            <span class="tag-pill me-2 mb-2">Theme: @(string.IsNullOrEmpty(Model.Theme) ? "None" : Model.Theme)</span>
            <span class="tag-pill me-2 mb-2">Style: @(string.IsNullOrEmpty(Model.Style) ? "None" : Model.Style)</span>
            <span class="tag-pill me-2 mb-2">Genre: @(string.IsNullOrEmpty(Model.Genre) ? "None" : Model.Genre)</span>
            <span class="tag-pill me-2 mb-2">Mood: @(string.IsNullOrEmpty(Model.Mood) ? "None" : Model.Mood)</span>
            <span class="tag-pill me-2 mb-2">Language: @(string.IsNullOrEmpty(Model.Language) ? "None" : Model.Language)</span>
        </div>

        <div class="poem-content-container p-4 mb-4 rounded">
            <pre class="poem-content">@Model.Content</pre>
        </div>

        <div class="poem-meta text-muted text-center">
            <i class="bi bi-calendar3"></i> Posted @Model.CreatedAt.ToString("MMMM dd, yyyy")
        </div>
    </div>
</div>


    <style>
        .poem-details-container {
            max-width: 800px;
            margin: 0 auto;
        }

        .poem-title {
            color: #2c3e50;
            font-weight: 600;
        }

        .poem-author {
            font-size: 1.1rem;
            color: #34495e;
        }

        .poem-content-container {
            background-color: #f8f9fa;
            border-left: 4px solid #6c757d;
        }

        .poem-content {
            font-family: 'Georgia', serif;
            font-size: 1.1rem;
            line-height: 1.7;
            white-space: pre-wrap;
            margin: 0;
            color: #2c3e50;
        }

        .tag-pill {
            display: inline-block;
            padding: 0.4rem 0.8rem;
            background-color: #e9ecef;
            color: #495057;
            border-radius: 25px;
            font-size: 0.9rem;
        }

        .poem-meta {
            font-size: 0.9rem;
        }

        .no-image-placeholder {
            height: 200px;
            background-color: #f8f9fa;
            border: 1px dashed #dee2e6;
        }
    </style>



    <script>
        document.querySelectorAll('.delete-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                const currentForm = this;
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This will permanently delete the poem!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        currentForm.submit();
                    }
                });
            });
        });
    </script>

