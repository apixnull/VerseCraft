@model List<VerseCraft.Models.FeaturedItem>
@using VerseCraft.Models

@{
    ViewData["Title"] = "Featured Items";
    var poems = Model.Where(f => f.WorkType == WorkType.Poem && f.Poem != null).Select(f => f.Poem!);
    var anthos = Model.Where(f => f.WorkType == WorkType.Anthology && f.Anthology != null).Select(f => f.Anthology!);
    var countP = poems.Count();
    var countA = anthos.Count();
    var countT = countP + countA;
}

<div class="featured-page">
    <style>
        /* Scoped CSS */
        .featured-page {
            --accent-pink: #e999c0;
            --accent-blue: #89b9e6;
            --text-light: #666;
            --text-dark: #333;
            --shadow: 0 8px 16px rgba(0,0,0,0.1);
            --radius: 12px;
        }

            .featured-page .stats {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(150px,1fr));
                gap: 1rem;
                margin: 1.5rem 0;
            }

            .featured-page .stat-card {
                background: #fff;
                border-radius: var(--radius);
                box-shadow: var(--shadow);
                padding: 1rem;
                position: relative;
                overflow: hidden;
                transition: transform .3s;
            }

                .featured-page .stat-card:hover {
                    transform: translateY(-4px);
                }

                .featured-page .stat-card::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 4px;
                    height: 100%;
                    background: var(--accent-blue);
                }

            .featured-page .stat-value {
                font-size: 1.75rem;
                font-weight: 700;
                color: var(--text-dark);
                margin-bottom: .25rem;
            }

            .featured-page .stat-label {
                font-size: .9rem;
                color: var(--text-light);
            }

            .featured-page .stat-icon {
                position: absolute;
                top: .75rem;
                right: .75rem;
                font-size: 1.5rem;
                color: rgba(137,186,230,0.3);
            }

            .featured-page .nav-tabs {
                border-bottom: 2px solid #eee;
                margin-bottom: 1rem;
            }

            .featured-page .nav-link {
                color: var(--text-light);
                font-weight: 500;
                padding: .75rem 1.5rem;
                transition: color .3s;
                border: none;
            }

                .featured-page .nav-link.active {
                    color: var(--accent-blue);
                    border-bottom: 3px solid var(--accent-blue);
                }

                .featured-page .nav-link:hover {
                    color: var(--accent-pink);
                }

            .featured-page .pane {
                display: none;
            }

                .featured-page .pane.active {
                    display: block;
                }

            .featured-page .search-add {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 1rem;
            }

            .featured-page .search-input {
                border: 1px solid #ddd;
                border-radius: 20px;
                padding: .5rem 2rem .5rem .75rem;
                width: 250px;
                position: relative;
            }

            .featured-page .search-add .fa-search {
                position: absolute;
                right: .75rem;
                top: 50%;
                transform: translateY(-50%);
                color: var(--text-light);
            }

            .featured-page .add-btn {
                background: var(--accent-pink);
                color: #fff;
                border-radius: 20px;
                padding: .5rem 1rem;
                text-decoration: none;
                display: inline-flex;
                align-items: center;
                gap: .25rem;
                transition: transform .3s, box-shadow .3s;
            }

                .featured-page .add-btn:hover {
                    transform: translateY(-2px);
                    box-shadow: var(--shadow);
                }

            .featured-page .grid {
                display: grid;
                grid-template-columns: repeat(auto-fill,minmax(280px,1fr));
                gap: 1rem;
            }

            .featured-page .card {
                background: #fff;
                border-radius: var(--radius);
                box-shadow: var(--shadow);
                padding: 1rem;
                position: relative;
                transition: transform .3s;
            }

                .featured-page .card:hover {
                    transform: translateY(-4px);
                }

            .featured-page .card-title {
                margin: 0 0 .5rem;
                font-size: 1.1rem;
                color: var(--text-dark);
            }

            .featured-page .card-author {
                font-size: .9rem;
                color: var(--accent-blue);
                margin-bottom: .5rem;
            }

            .featured-page .card-desc {
                font-size: .9rem;
                color: var(--text-light);
                margin-bottom: .75rem;
            }

            .featured-page .remove {
                position: absolute;
                top: .5rem;
                right: .5rem;
                width: 26px;
                height: 26px;
                border-radius: 50%;
                background: rgba(255,255,255,0.9);
                border: 1px solid #f88;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                transition: transform .3s;
            }

                .featured-page .remove:hover {
                    transform: rotate(90deg);
                    background: #f88;
                    color: #fff;
                }
    </style>

    <!-- Stats -->
    <div class="stats">
        <div class="stat-card">
            <div class="stat-value">@countP</div>
            <div class="stat-label">Featured Poems</div>
            <div class="stat-icon"><i class="bi bi-journal-text"></i></div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@countA</div>
            <div class="stat-label">Featured Anthologies</div>
            <div class="stat-icon"><i class="bi bi-collection"></i></div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@countT</div>
            <div class="stat-label">Total Featured</div>
            <div class="stat-icon"><i class="bi bi-stars"></i></div>
        </div>
    </div>

    <!-- Tabs -->
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <button class="nav-link active" data-target="poems-pane">📜 Poems</button>
        </li>
        <li class="nav-item">
            <button class="nav-link" data-target="anth-pane">📚 Anthologies</button>
        </li>
    </ul>

    <!-- Poems Pane -->
    <div id="poems-pane" class="pane active">
        <div class="search-add">
            <div style="position:relative;">
                <input type="text" class="search-input" placeholder="Search poems..." data-type="poems" />
                <i class="fas fa-search"></i>
            </div>
            <a asp-action="SearchItemToAdd" asp-route-type="Poem" class="add-btn">
                <i class="fas fa-plus"></i> Add Poem
            </a>
        </div>
        <div class="grid" id="poems-grid">
            @foreach (var p in poems)
            {
                <div class="card" data-title="@p.Title.ToLower()">
                    <div class="remove" onclick="confirmRemove('@p.Id','Poem')">
                        <i class="fas fa-times"></i>
                    </div>
                    <h4 class="card-title">@p.Title</h4>
                    <div class="card-author">By @p.AuthorName</div>
                    <p class="card-desc">@p.Summary</p>
                </div>
            }
        </div>
    </div>

    <!-- Anthologies Pane -->
    <div id="anth-pane" class="pane">
        <div class="search-add">
            <div style="position:relative;">
                <input type="text" class="search-input" placeholder="Search anthologies..." data-type="anthologies" />
                <i class="fas fa-search"></i>
            </div>
            <a asp-action="SearchItemToAdd" asp-route-type="Anthology" class="add-btn">
                <i class="fas fa-plus"></i> Add Anthology
            </a>
        </div>
        <div class="grid" id="anthologies-grid">
            @foreach (var a in anthos)
            {
                <div class="card" data-title="@a.Title.ToLower()">
                    <div class="remove" onclick="confirmRemove('@a.Id','Anthology')">
                        <i class="fas fa-times"></i>
                    </div>
                    <h4 class="card-title">@a.Title</h4>
                    <div class="card-author">By @a.AuthorName</div>
                    <p class="card-desc">@a.Description</p>
                </div>
            }
        </div>
    </div>

    @section Scripts {
        <script>
            // tab switching
            document.querySelectorAll('.featured-page .nav-link').forEach(btn=>{
                btn.addEventListener('click',()=>{
                    const target = btn.dataset.target;
                    document.querySelectorAll('.featured-page .nav-link, .featured-page .pane')
                        .forEach(el=>el.classList.remove('active'));
                    btn.classList.add('active');
                    document.getElementById(target).classList.add('active');
                });
            });

            // search filter
            document.querySelectorAll('.featured-page .search-input').forEach(inp=>{
                inp.addEventListener('input',()=>{
                    const term=inp.value.toLowerCase(),
                          grid=document.getElementById(`${inp.dataset.type}-grid`);
                    grid.querySelectorAll('.card').forEach(c=>{
                        c.style.display = c.dataset.title.includes(term) ? '' : 'none';
                    });
                });
            });

            // remove confirm
            function confirmRemove(id,type){
                Swal.fire({
                    title:'Remove Feature?', icon:'warning',
                    showCancelButton:true,
                    confirmButtonColor:'#ff8a8a',
                    cancelButtonColor:'#aaa',
                    confirmButtonText:'Remove'
                }).then(res=>{
                    if(res.isConfirmed){
                        const f=document.createElement('form');
                        f.method='post';
                        f.action=`/Admin/Featured/RemoveFeature/${id}`;
                        f.innerHTML=`<input name="type" value="${type}" hidden>`;
                        document.body.appendChild(f);
                        f.submit();
                    }
                });
            }
        </script>
    }
</div>
