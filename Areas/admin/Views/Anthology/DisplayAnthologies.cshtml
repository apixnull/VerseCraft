@model IEnumerable<VerseCraft.Models.Anthology>

@{
    ViewData["Title"] = "Manage Anthologies";
}

<link rel="stylesheet" href="~/css/displayUser.css" asp-append-version="true" />

<style>
    
   
    /* Stats Cards */
    .stats-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: linear-gradient(135deg, rgba(248, 187, 208, 0.9) 0%, rgba(187, 222, 251, 0.9) 100%);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        display: flex;
        align-items: center;
        box-shadow: var(--card-shadow);
    }

    .stat-icon {
        background: white;
        border-radius: 12px;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
    }

    .stat-value {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--text-dark);
    }

    .stat-label {
        color: var(--text-light);
        font-size: 0.9rem;
    }

    /* Anthology Cards */
    .anthology-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .anthology-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        transition: transform 0.3s, box-shadow 0.3s;
        position: relative;
        overflow: hidden;
    }

        .anthology-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }

    .anthology-header {
        background: var(--primary-gradient);
        padding: 1rem;
        position: relative;
    }

    .anthology-id {
        font-size: 0.9rem;
        color: var(--text-dark);
        margin-bottom: 0.5rem;
    }

    .anthology-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: var(--text-dark);
        margin-bottom: 0.5rem;
    }

    .anthology-body {
        padding: 1.5rem;
    }

    .anthology-description {
        color: var(--text-light);
        font-size: 0.9rem;
        margin-bottom: 1rem;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .metadata-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.5rem;
        font-size: 0.85rem;
    }

    .metadata-label {
        color: var(--text-light);
    }

    .metadata-value {
        color: var(--text-dark);
        font-weight: 500;
    }

    .status-badge {
        font-size: 0.75rem;
        padding: 4px 8px;
        border-radius: 20px;
        margin-left: 0.5rem;
    }

    .badge-approved {
        background-color: rgba(40, 167, 69, 0.1);
        color: #28a745;
        border: 1px solid rgba(40, 167, 69, 0.2);
    }

    .badge-pending {
        background-color: rgba(255, 193, 7, 0.1);
        color: #e9602d;
        border: 1px solid #ed1a0a;
    }

    .badge-public {
        background-color: rgba(23, 162, 184, 0.1);
        color: #17a2b8;
        border: 1px solid rgba(23, 162, 184, 0.2);
    }

    .badge-private {
        background-color: rgba(108, 117, 125, 0.1);
        color: #6c757d;
        border: 1px solid rgba(108, 117, 125, 0.2);
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        padding: 1rem;
        border-top: 1px solid rgba(0, 0, 0, 0.05);
    }

    .delete-form {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 10;
    }

    .delete-btn {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.95);
        border: 2px solid #ff8a8a;
        color: #ff8a8a;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

        .delete-btn:hover {
            background: #ff8a8a;
            color: white;
            transform: rotate(90deg);
        }
</style>

<div class="container-fluid">
    <!-- Stats Cards -->
    <div class="stats-container">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-book text-primary"></i>
            </div>
            <div>
                <div class="stat-value">@Model.Count()</div>
                <div class="stat-label">Total Anthologies</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-check-circle text-success"></i>
            </div>
            <div>
                <div class="stat-value">@Model.Count(a => a.IsApproved)</div>
                <div class="stat-label">Approved</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-globe text-info"></i>
            </div>
            <div>
                <div class="stat-value">@Model.Count(a => a.IsPublic)</div>
                <div class="stat-label">Public</div>
            </div>
        </div>
    </div>

    <!-- Search and Create -->
    <div class="filter-bar d-flex flex-wrap justify-content-between align-items-center mb-4">
        <div class="search-container" style="max-width: 400px;">
            <div class="input-group">
                <input id="anthologySearch" type="text" class="form-control" placeholder="Search anthologies...">
                <button class="btn btn-outline-secondary" type="button">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>
        <a asp-action="CreateAnthology" class="btn create-btn">
            <i class="bi bi-plus-lg me-1"></i> New Anthology
        </a>
    </div>

    <!-- Anthology Cards Grid -->
    <div class="anthology-grid" id="anthologyContainer">
        @foreach (var anthology in Model)
        {
            <div class="anthology-card" data-id="@anthology.Id" data-title="@anthology.Title.ToLower()"
                 data-author="@anthology.AuthorName.ToLower()" data-description="@anthology.Description.ToLower()">
                <form asp-action="DeleteAnthology" asp-route-id="@anthology.Id"
                      method="post" class="delete-form">
                    <button type="button" class="delete-btn delete-anthology-btn" title="Delete">
                        <i class="fas fa-times"></i>
                    </button>
                </form>

                <div class="anthology-header">
                    <div class="anthology-id">#@anthology.Id</div>
                    <h3 class="anthology-title">@anthology.Title</h3>
                    <div class="status-group">
                        <span class="status-badge @(anthology.IsApproved ? "badge-approved" : "badge-pending")">
                            @(anthology.IsApproved ? "Approved" : "Pending")
                        </span>
                        <span class="status-badge @(anthology.IsPublic ? "badge-public" : "badge-private")">
                            @(anthology.IsPublic ? "Public" : "Private")
                        </span>
                    </div>
                </div>

                <div class="anthology-body">
                    <div class="anthology-description">@anthology.Description</div>

                    <div class="metadata">
                        <div class="metadata-item">
                            <span class="metadata-label">Author:</span>
                            <span class="metadata-value">@anthology.AuthorName</span>
                        </div>
                        <div class="metadata-item">
                            <span class="metadata-label">Created:</span>
                            <span class="metadata-value">@anthology.CreatedAt.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="metadata-item">
                            <span class="metadata-label">Poems:</span>
                            <span class="metadata-value">@anthology.AnthologyPoems.Count</span>
                        </div>
                    </div>
                </div>

                <div class="action-buttons">
                    <a asp-action="EditAnthology" asp-route-id="@anthology.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                        <i class="bi bi-pencil"></i>
                    </a>
                    <a asp-action="ViewAnthology" asp-route-id="@anthology.Id" class="btn btn-sm btn-outline-info" title="View">
                        <i class="bi bi-eye"></i>
                    </a>
                </div>
            </div>
        }
    </div>

    <div id="noResults" class="my-4" style="display: none;">
        <i class="bi bi-search" style="font-size: 3rem; color: #bbdefb;"></i>
        <h4 class="mt-3">No anthologies found</h4>
        <p class="text-muted">Try adjusting your search criteria</p>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Client-side search
            const searchInput = document.getElementById('anthologySearch');
            const anthologyCards = document.querySelectorAll('.anthology-card');
            const noResults = document.getElementById('noResults');
            const container = document.getElementById('anthologyContainer');

            searchInput.addEventListener('input', function () {
                const term = this.value.trim().toLowerCase();
                let visibleCount = 0;

                anthologyCards.forEach(card => {
                    const title = card.dataset.title;
                    const id = card.dataset.id;
                    const author = card.dataset.author;
                    const description = card.dataset.description;

                    const matches = term === '' ||
                        title.includes(term) ||
                        id.includes(term) ||
                        author.includes(term) ||
                        description.includes(term);

                    card.style.display = matches ? 'block' : 'none';
                    if (matches) visibleCount++;
                });

                noResults.style.display = visibleCount === 0 ? 'block' : 'none';
                container.style.display = visibleCount === 0 ? 'none' : 'grid';
            });

            // Delete confirmation
            document.querySelectorAll('.delete-anthology-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    const form = this.closest('form');
                    const title = this.closest('.anthology-card').querySelector('.anthology-title').textContent;

                    Swal.fire({
                        title: 'Delete Anthology?',
                        text: `Are you sure you want to delete "${title}"?`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#ff8a8a',
                        cancelButtonColor: '#89b9e6',
                        confirmButtonText: 'Delete',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit();
                        }
                    });
                });
            });
        });
    </script>
}